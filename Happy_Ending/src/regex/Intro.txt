Regex: Regular Expression

Regex is an API to define a pattern for searching or manipulating strings.

With this api comes 1 interface and 3 class:

1 -> MatchResult interface
2 -> Matcher Class
3 -> Pattern Class
4 -> PatternSyntaxException class

Matcher Class: it implements MatchResult Interface class
> it is a regex engine.

Methods:

1. boolean matches() - test whether the regular expression matches the pattern.
2. boolean find() - finds the next expression that matches the pattern.
3. boolean find(int start) - finds the next expression that matches the pattern from the given start number.
4. String group() - returns the matched subsequence.
5. int start() - returns the starting index of the matched subsequence.
6. int end() - returns the ending index of the matched subsequence.
7. int groupCount() - returns the total number of the matched subsequence.

Pattern Class: it is used to make regex pattern
> It is the compiled version of a regular expression. It is used to define a pattern for the regex engine.

Methods:

1. static Pattern compile(String regex) - compiles the given regex and returns the instance of the Pattern.
2. Matcher matcher(CharSequence input) - creates a matcher that matches the given input with the pattern.
3. static boolean matches(String regex, CharSequence input) - It works as the combination of compile and matcher methods. It compiles the regular expression and matches the given input with the pattern.
4. String[] split(CharSequence input) - splits the given input string around matches of given pattern.
5. String pattern() - returns the regex pattern.